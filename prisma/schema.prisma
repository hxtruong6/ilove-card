// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  email         String          @unique
  password      String
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  trees         Tree[]
  messages      Message[]
  receivedTrees TreeRecipient[]
}

model Tree {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  theme       String          @default("christmas")
  isPublic    Boolean         @default(false)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  owner       User            @relation(fields: [ownerId], references: [id])
  ownerId     String          @db.ObjectId
  recipients  TreeRecipient[]
  messages    Message[]

  @@index([ownerId])
  @@index([isPublic])
}

model TreeRecipient {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  tree      Tree     @relation(fields: [treeId], references: [id])
  treeId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([treeId, userId])
  @@index([treeId])
  @@index([userId])
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  imageUrls String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tree      Tree     @relation(fields: [treeId], references: [id])
  treeId    String   @db.ObjectId
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String   @db.ObjectId

  @@index([treeId])
  @@index([senderId])
}
